MAIN.DART

import'package:flutter/material.dart';
import 'package:login_statefull/src/app.dart';

void main () {
  runApp(App());
}








APP.DART

import 'package:flutter/material.dart';
import 'package:login_statefull/src/screens/login_screen.dart';

class App extends StatelessWidget {
  const App({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData.dark(),
      home: SafeArea(
        child: Scaffold(
          body: LoginScreen(),
        ),
      )
    );
  }
}








VALIDATION_MIXIN.DART

class ValidationMixin {
  String? validateEmail(String? value) {
  if (value!.contains("@") && value.contains(".")) {
  return null;
  }
  return "Invalid email address";
  }


  String? validatePassword (String? value) {
    if (value!.length >4) {
      return null;
    }
    return "Password must be at least 5 characters long";
  }

  String? validateGender (String? value){
    if(value !=null){
      return null;
    }
    return "Please select your gender";
  }
    }








LOGIN_SCREEN.DART

import 'package:flutter/material.dart';
import 'package:login_statefull/src/mixins/validation_mixin.dart';
import 'package:login_statefull/src/screens/second_screen.dart';

class LoginScreen extends StatefulWidget {
  const LoginScreen({Key? key}) : super(key: key);

  @override
  _LoginScreenState createState() => _LoginScreenState();
}

class _LoginScreenState extends State<LoginScreen> with ValidationMixin {

  String? gender;
  String? email;
  String? password;

  // define a global key of type FormState

  final formKey = GlobalKey<FormState>();



  @override
  Widget build(BuildContext context) {
    return Center(
      child: Container(
        margin: EdgeInsets.all(8),
        child: Form(
          key: formKey,
          child: Card(
            child: Padding(
              padding: const EdgeInsets.all(8.0),
              child: Column(

                mainAxisSize: MainAxisSize.min,
                children: [
                  buildEmailField(),
                  SizedBox(height: 8),
                  buildPasswordField(),
                  SizedBox(height: 8),
                  buildGenderField(),
                  SizedBox(height: 8),
                  buildSubmitButton(context),
                ],
              ),
            ),
          ),
        ),
      ),
    );
  }

  Widget buildEmailField() {
    return TextFormField(
      keyboardType: TextInputType.emailAddress,
      decoration: InputDecoration(
        labelText: "Email",
        hintText: "you@example.com",
          prefixIcon: Icon(Icons.email),
          border: OutlineInputBorder()
      ),
      validator: validateEmail,
      onSaved: (value){
        email = value;
    },
    );
  }

  Widget buildPasswordField() {
    return TextFormField(
      obscureText: true,
      obscuringCharacter: ".",
      decoration: InputDecoration(
        labelText: "Password",
        hintText: "password",
        prefixIcon: Icon(Icons.lock),
        border: OutlineInputBorder()
      ),
        validator: validatePassword,
      onSaved: (value){
        password = value;
      },
    );
  }

  Widget buildGenderField() {
    return DropdownButtonFormField<String>(
      items: [
        DropdownMenuItem(
          child: Text("Female"),
          value: "Female",
        ),

        DropdownMenuItem(
          child: Text("Male"),
          value: "Male",
        ),

        DropdownMenuItem(
          child: Text("I don't wish to answer"),
          value: "I don't wish to answer",
        ),

      ],

      onChanged: (val) {

        gender = val;
      },

      decoration: InputDecoration(
        labelText: "Select your gender",
        hintText: "male",
        border: OutlineInputBorder(),
      ),

      validator: validateGender,
      onSaved: (value){
        gender = value;
      },
    );
  }

  Widget buildSubmitButton(BuildContext context) {
    return Container(
      width: double.infinity,
      child: ElevatedButton(
        child: Text("Submit"),
        onPressed: () {
          //access the form and try to validate each of the children
          // bool? validForm  = formKey.currentState?.validate();
          // if(validForm == true){
          //   // attempt to extract all the values from formfield.
          // }

          bool validForm = formKey.currentState!.validate();
          if(validForm){
            // attempt to extract all the values from formfield.
            formKey.currentState!.save();
            print("Email is $email, password is $password and gender is $gender");
            Navigator.of(context).push(
              MaterialPageRoute(
                builder: (BuildContext context){
                  return SecondScreen();
                },
              ),
            );
          }
        },
        style: ElevatedButton.styleFrom(
          primary: Colors.green,
          padding: EdgeInsets.all(12),

        ),
      ),
    );
  }
}






SECOND_SCREEN.DART

import 'package:flutter/material.dart';

class SecondScreen extends StatelessWidget {
  const SecondScreen({Key? key}) : super(key: key);
  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Scaffold(
        appBar: AppBar(
          title: Text("Second screen"),
        ),
        body: Container(
          margin: EdgeInsets.all(16),
          color: Colors.greenAccent,
          child: Center(
            child: Text("This is the second screen"),
          ),
        ),
      ),
    );
  }
}


